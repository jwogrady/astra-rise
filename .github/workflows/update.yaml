name: Build & Release Theme

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

# Ensure the workflow can create releases and upload assets
permissions:
  contents: write

# Prevent overlapping release jobs on the same ref
concurrency:
  group: release-${{ github.repository }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  release:
    if: ${{ github.repository == 'jwogrady/astra-rise' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from style.css
        id: version
        run: |
          VERSION=$(grep -m1 '^Version:' style.css | sed -E 's/Version:[[:space:]]*//;s/[[:space:]]*$//')
          if [ -z "$VERSION" ]; then
            echo "No Version: found in style.css" >&2
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create theme zip
        id: zip
        run: |
          set -euo pipefail
          VERSION=${{ steps.version.outputs.version }}
          ZIPNAME="astra-rise-${VERSION}.zip"

          # Stage files under a single top-level directory: astra-rise/
          WORKDIR="$PWD"
          STAGE_DIR="$RUNNER_TEMP/astra-rise"
          rm -rf "$STAGE_DIR"
          mkdir -p "$STAGE_DIR"

          rsync -a "$WORKDIR"/ "$STAGE_DIR"/ \
            --exclude='.git/' \
            --exclude='.github/' \
            --exclude='node_modules/' \
            --exclude='*.zip' \
            --exclude='.vscode/' \
            --exclude='.DS_Store'

          # Create the zip so it contains astra-rise/ as the root folder
          (cd "$RUNNER_TEMP" && zip -r "$ZIPNAME" "astra-rise")

          mv "$RUNNER_TEMP/$ZIPNAME" "$WORKDIR/$ZIPNAME"
          echo "zip=$WORKDIR/$ZIPNAME" >> $GITHUB_OUTPUT

      # Compute release metadata once for consistent usage
      - name: Compute release metadata
        id: meta
        env:
          IS_TAG_EVENT: ${{ startsWith(github.ref, 'refs/tags/') }}
          PUSHED_TAG: ${{ github.ref_name }}
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          if [ "$IS_TAG_EVENT" = "true" ]; then
            TAG="$PUSHED_TAG"
            VER="${PUSHED_TAG#v}"
          else
            TAG="v${VERSION}"
            VER="$VERSION"
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "version=$VER" >> "$GITHUB_OUTPUT"

      # Create or update a GitHub Release and upload assets in one step
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN || secrets.GITHUB_TOKEN }}
        with:
          # Use the computed tag and version for consistency
          tag_name: ${{ steps.meta.outputs.tag }}
          name: astra-rise-${{ steps.meta.outputs.version }}
          body: Release ${{ steps.meta.outputs.version }}
          draft: false
          prerelease: false
          target_commitish: ${{ github.sha }}
          generate_release_notes: true
          make_latest: true
          fail_on_unmatched_files: true
          files: |
            ${{ steps.zip.outputs.zip }}